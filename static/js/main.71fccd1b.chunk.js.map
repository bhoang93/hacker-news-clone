{"version":3,"sources":["services/Api.js","services/HackerNewsApi.js","store/story/actions.js","store/story/selectors.js","styles/palette.js","utils/GetSiteHostName.js","utils/GetArticleLink.js","components/ListItem/style.js","components/ListItem/index.js","components/List/style.js","components/List/index.js","components/Loader/style.js","components/Loader/index.js","components/App/style.js","components/App/App.js","components/App/index.js","styles/globals.js","store/app/actions.js","store/app/reducers.js","store/story/reducers.js","store/reducer.js","store/middleware.js","store/index.js","serviceWorker.js","index.js"],"names":["API_ROOT","process","URL","TIMEOUT","HEADERS","Content-Type","Accept","client","ApiService","_ref","_ref$baseURL","baseURL","_ref$timeout","timeout","_ref$headers","headers","auth","Object","classCallCheck","this","axios","create","interceptors","response","use","handleSuccess","handleError","error","Promise","reject","path","get","then","data","payload","post","put","patch","delete","hackerNewsApi","getTopStoryIds","concat","getStory","id","getStoriesByPage","ids","page","_getPageSlice","limit","arguments","length","undefined","begin","end","getPageSlice","storyPromises","items","slice","getPageValues","map","all","NS","actionTypes","FETCH_STORY_IDS_REQUEST","FETCH_STORY_IDS_SUCCESS","FETCH_STORY_IDS_FAILURE","FETCH_STORY_REQUEST","FETCH_STORY_SUCCESS","FETCH_STORY_FAILURE","action","type","actions","fetchStoryIds","dispatch","HackerNewsApi","storyIds","fetchStories","catch","err","stories","hasMoreStoriesSelector","createSelector","state","story","colorsDark","background","backgroundSecondary","text","textSecondary","border","getSiteHostname","siteUrl","hostname","includes","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","Item","styled","li","_templateObject","theme","Title","h3","_templateObject2","_ref2","Host","span","_templateObject3","_ref3","ExternalLink","a","_templateObject4","_ref4","Description","div","_templateObject5","_ref5","CommentLink","_templateObject6","_ref6","_ref7","LINK_REL","ListItem","by","_ref$kids","kids","score","title","site","time","getSiteHostName","link","userUrl","react_default","createElement","href","rel","target","style","color","ListWrapper","ul","style_templateObject","props","List","components_ListItem","assign","key","blink","keyframes","Loader_style_templateObject","Animation","style_templateObject2","Loader","Wrapper","App_style_templateObject","h1","App_style_templateObject2","App","_this$props","_this","isFetching","fetchStoriesFirstPage","_this$props2","hasMoreStories","styled_components_browser_esm","style_Title","lib_default","dataLength","next","hasMore","loader","components_Loader","height","overflow","components_List","Component","connect","setGlobalStyles","injectGlobal","globals_templateObject","SET_THEME","app","SWITCH_THEME","objectSpread","toConsumableArray","rootReducer","combineReducers","middlewareList","push","thunk","middleware","compose","applyMiddleware","apply","configureStore","intialState","createStore","reducer","Boolean","window","location","match","console","log","store","ReactDOM","render","es","components_App","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71fccd1b.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_ROOT = process.env.URL || \"http://localhost:3000/\";\r\nconst TIMEOUT = 20000;\r\nconst HEADERS = {\r\n  \"Content-Type\": \"application/json\",\r\n  Accept: \"application/json\",\r\n}\r\n\r\nclass ApiService {\r\n  constructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth }) {\r\n    const client = axios.create({\r\n      baseURL,\r\n      timeout,\r\n      headers,\r\n      auth,\r\n    });\r\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\r\n    this.client = client;\r\n  }\r\n\r\n    handleSuccess(response) {\r\n      return response;\r\n    }\r\n\r\n    handleError(error) {\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    get(path) {\r\n      return this.client.get(path).then(response => response.data);\r\n    }\r\n\r\n    post(path, payload) {\r\n      return this.client.post(path, payload).then(response => response.data);\r\n    }\r\n\r\n    put(path, payload) {\r\n      return this.client.put(path, payload).then(response => response.data);\r\n    }\r\n\r\n    patch(path, payload) {\r\n      return this.client.patch(path, payload).then(response => response.data);\r\n    }\r\n\r\n    delete(path) {\r\n      return this.client.delete(path).then(response => response.data);\r\n    }\r\n}\r\n\r\nexport default ApiService;\r\n","import ApiService from './Api';\r\n\r\nconst JSON_QUERY = '.json?print=pretty';\r\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0';\r\nconst client = new ApiService({ baseURL: BASE_URL });\r\n\r\nconst hackerNewsApi = {};\r\n\r\nconst PAGE_LIMIT = 20;\r\nconst getPageSlice = (limit, page = 0) => ({ begin: page * limit, end: (page + 1) * limit });\r\nconst getPageValues = ({ begin, end, items }) => items.slice(begin, end);\r\n\r\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\r\nhackerNewsApi.getStory = id => client.get(`/item/${id}${JSON_QUERY}`);\r\nhackerNewsApi.getStoriesByPage = (ids, page) => {\r\n  const { begin, end } = getPageSlice(PAGE_LIMIT, page);\r\n  const activeIds = getPageValues({ begin, end, items: ids });\r\n  const storyPromises = activeIds.map(id => hackerNewsApi.getStory(id));\r\n  return Promise.all(storyPromises);\r\n};\r\n\r\nexport default hackerNewsApi;\r\n","import HackerNewsApi from \"services/HackerNewsApi\";\r\n\r\nconst NS = \"@hnClone/story\";\r\n\r\nexport const actionTypes = {\r\n  FETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS_REQUEST`,\r\n  FETCH_STORY_IDS_SUCCESS: `${NS}/FETCH_STORY_IDS_SUCCESS`,\r\n  FETCH_STORY_IDS_FAILURE: `${NS}/FETCH_STORY_IDS_FAILURE`,\r\n  FETCH_STORY_REQUEST: `${NS}/FETCH_STORY_REQUEST`,\r\n  FETCH_STORY_SUCCESS: `${NS}/FETCH_STORY_SUCCESS`,\r\n  FETCH_STORY_FAILURE: `${NS}/FETCH_STORY_FAILURE`,\r\n};\r\n\r\nconst action = (type, payload) => ({type, payload});\r\n\r\nconst actions = {\r\n  fetchStoryIds: (payload = {}) => {\r\n    return dispatch => {\r\n      dispatch(action(actionTypes.FETCH_STORY_IDS_REQUEST), payload);\r\n\r\n      return HackerNewsApi.getTopStoryIds()\r\n        .then(storyIds => {\r\n          dispatch(action(actionTypes.FETCH_STORY_IDS_SUCCESS, { storyIds }));\r\n          dispatch(actions.fetchStories({ storyIds, page: 0 }));\r\n          return storyIds;\r\n        })\r\n        .catch(err => dispatch(action(actionTypes.FETCH_STORY_IDS_FAILURE, err)));\r\n    }\r\n  },\r\n  fetchStories: (payload = {}) => {\r\n    return dispatch => {\r\n      dispatch(action(actionTypes.FETCH_STORY_REQUEST), payload);\r\n      const { storyIds, page } = payload;\r\n\r\n      return HackerNewsApi.getStoriesByPage(storyIds, page)\r\n        .then(stories => dispatch(action(actionTypes.FETCH_STORY_SUCCESS, { stories })))\r\n        .catch(err => dispatch(action(actionTypes.FETCH_STORY_FAILURE, err)));\r\n    }\r\n  }\r\n};\r\n\r\nexport default actions;\r\n","import { createSelector } from \"reselect\";\r\n\r\nconst storyIdsSelector = state => state.story.storyIds;\r\nconst storiesSelector = state => state.story.stories;\r\n\r\nexport const hasMoreStoriesSelector = createSelector(\r\n  storyIdsSelector,\r\n  storiesSelector,\r\n  (storyIds, stories) => storyIds.length > stories.length,\r\n)\r\n","export const colorsDark = {\r\n  background: '#272727',\r\n  backgroundSecondary: '#393C3E',\r\n  text: '#bfbebe',\r\n  textSecondary: '#848886',\r\n  border: '#272727',\r\n};\r\n\r\nexport const colorsLight = {\r\n  background: '#EAEAEA',\r\n  backgroundSecondary: '#F8F8F8',\r\n  text: '#848886',\r\n  textSecondary: '#aaaaaa',\r\n  border: '#EAEAEA',\r\n};\r\n","import url from 'url';\r\n\r\nconst getSiteHostname = siteUrl => {\r\n  let hostname = '';\r\n\r\n  if (siteUrl) {\r\n    if (!siteUrl.includes('//')) {\r\n      siteUrl = `http://${siteUrl}`;\r\n    }\r\n\r\n    hostname = url.parse(siteUrl).hostname;\r\n  }\r\n\r\n  if (hostname.includes('www.')) {\r\n    hostname = hostname.split('www.')[1];\r\n  }\r\n\r\n  return hostname;\r\n};\r\n\r\nexport default getSiteHostname;\r\n","\r\nconst HN_ROOT = 'https://news.ycombinator.com';\r\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\r\nexport const HN_USER = `${HN_ROOT}/user?id=`;\r\n\r\nconst getArticleLink = ({ url, id }) => {\r\n  const commentUrl = `${HN_ITEM}${id}`;\r\n  const link = !!url ? url : commentUrl;\r\n\r\n  return link;\r\n};\r\n\r\nexport default getArticleLink;\r\n","import styled from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n  border-bottom: 1px solid ${({ theme }) => theme.border};\r\n  padding: 14px 24px;\r\n  &:last-child {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h3`\r\n  color: ${({ theme }) => theme.text};\r\n  margin-top: 0;\r\n  margin-bottom: 6px;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  letter-spacing: 0.4px;\r\n`;\r\n\r\nexport const Host = styled.span`\r\n  color: ${({ theme }) => theme.textSecondary};\r\n  font-size: 12px;\r\n`;\r\n\r\nexport const ExternalLink = styled.a`\r\n  color: ${({ theme }) => theme.text};\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  text-decoration: none;\r\n`;\r\n\r\nexport const Description = styled.div`\r\n  font-size: 14px;\r\n  color: ${({ theme }) => theme.textSecondary};\r\n`;\r\n\r\nexport const CommentLink = styled.a`\r\n  color: ${({ theme }) => theme.textSecondary};\r\n\r\n  &:visited {\r\n    color: ${({ theme }) => theme.textSecondary};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport getSiteHostName from \"utils/GetSiteHostName\";\r\nimport getArticleLink, { HN_USER, HN_ITEM } from \"utils/GetArticleLink\";\r\n\r\nimport { Item, Title, Host, ExternalLink, Description, CommentLink } from \"./style\";\r\n\r\nconst LINK_REL = \"noopener noreferrer nofollow\"\r\n\r\nconst ListItem = ({ by, kids = [], score, url, title, id, type, time }) => {\r\n  const site = getSiteHostName(url) || \"new.ycombinator.com\";\r\n  const link = getArticleLink({ url, id });\r\n  const commentUrl = `${HN_ITEM}${id}`;\r\n  const userUrl = `${HN_USER}${by}`;\r\n  return (\r\n    <Item>\r\n      <ExternalLink href={link} rel={LINK_REL} target=\"_blank\">\r\n        <Title>\r\n          {title}\r\n        </Title><Host>({site})</Host>\r\n      </ExternalLink>\r\n      <Description>\r\n          {score} points by {\" \"}\r\n          <CommentLink href={userUrl} rel={LINK_REL} target=\"_blank\">\r\n            <span style={{color: \"white\"}}>{by}</span>\r\n          </CommentLink>\r\n          {\" | \"}\r\n          <CommentLink href={commentUrl} rel={LINK_REL} target=\"_blank\">\r\n            {kids.length} Comments\r\n          </CommentLink>\r\n      </Description>\r\n    </Item>\r\n  );\r\n};\r\n\r\nexport default ListItem;\r\n","import styled from \"styled-components\";\r\n\r\nexport const ListWrapper = styled.ul`\r\n  background-color: ${props => props.theme.backgroundSecondary};\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 20px;\r\n  display: flex;\r\n  flex-direction: column\r\n`;\r\n","import React from \"react\";\r\nimport ListItem from \"components/ListItem\";\r\n\r\nimport { ListWrapper } from \"./style\";\r\n\r\nconst List = ({ stories }) => (\r\n  <ListWrapper>\r\n    {stories.map(story => <ListItem {...story} key={story.id} />)}\r\n  </ListWrapper>\r\n)\r\n\r\nexport default List;\r\n","import styled, { keyframes } from \"styled-components\";\r\n\r\nconst blink = keyframes`\r\n  0% {\r\n    opacity: .2;\r\n  }\r\n\r\n  20% {\r\n    opacity: 1;\r\n  }\r\n\r\n  100% {\r\n    opacity: .2;\r\n  }\r\n\r\n`;\r\n\r\nexport const Animation = styled.div`\r\n  text-align: center;\r\n\r\n  span {\r\n    color: ${({theme}) => theme.textSecondary};\r\n    display: inline-block;\r\n    margin-left: 4px;\r\n    margin-right: 4px;\r\n    font-size: 80px;\r\n    line-height: 0.1;\r\n    animation-name: ${blink};\r\n    animation-duration: 1s;\r\n    animation-iteration-count: infinite;\r\n    animation-fill-mode: both;\r\n  }\r\n\r\n  span:nth-child(2) {\r\n    animation-delay: .2s;\r\n  }\r\n\r\n  span:nth-child(3) {\r\n    animation-delay: .4s;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Animation } from \"./style\";\r\n\r\nconst Loader = () => (\r\n  <Animation>\r\n    <span>.</span>\r\n    <span>.</span>\r\n    <span>.</span>\r\n  </Animation>\r\n)\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\";\r\nimport { tablet, mobile } from \"styles/mediaQueries\";\r\n\r\nexport const Wrapper = styled.div`\r\n  width: 85%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  padding-bottom: 200px;\r\n\r\n  $(tablet) {\r\n    width: 96%;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  color: ${props => props.theme.textSecondary};\r\n  font-size: 20px;\r\n  font-weight: 300;\r\n  margin-top: 24px;\r\n  margin-bottom: 26px;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { colorsDark } from \"styles/palette\";\r\nimport List from \"components/List\";\r\nimport Loader from \"components/Loader\";\r\nimport InfinteScroll from \"react-infinite-scroll-component\";\r\n\r\nimport { Wrapper, Title } from \"./style\";\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchStoriesFirstPage();\r\n  }\r\n\r\n  fetchStories = () => {\r\n    const { storyIds, page, fetchStories, isFetching } = this.props;\r\n    if (!isFetching) {\r\n      fetchStories({ storyIds, page });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { stories, hasMoreStories } = this.props;\r\n    return (\r\n      <ThemeProvider theme={colorsDark}>\r\n        <div>\r\n          <Wrapper>\r\n            <Title>Hacker News</Title>\r\n            <InfinteScroll\r\n            dataLength={stories.length}\r\n            next={this.fetchStories}\r\n            hasMore={hasMoreStories}\r\n            loader={<Loader />}\r\n            style={{\r\n              height: \"100%\",\r\n              overflow: \"visible\"\r\n            }}\r\n            >\r\n            <List stories={stories}/>\r\n            </InfinteScroll>\r\n          </Wrapper>\r\n        </div>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { connect } from \"react-redux\";\nimport actions from \"store/story/actions\";\nimport { hasMoreStoriesSelector } from \"store/story/selectors\";\nimport App from \"./App\";\n\nconst mapStateToProps = state => ({\n  stories: state.story.stories,\n  page: state.story.page,\n  storyIds: state.story.storyIds,\n  isFetching: state.story.isFetching,\n  hasMoreStories: hasMoreStoriesSelector(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n  fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n  fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page }))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { injectGlobal } from 'styled-components';\r\nimport { colorsDark } from \"./palette\";\r\n\r\nconst setGlobalStyles = () =>\r\n  injectGlobal`\r\n    * {\r\n      box-sizing: border-box;\r\n    }\r\n    html, body {\r\n      font-family: Lato,Helvetica-Neue,Helvetica,Arial,sans-serif;\r\n      width: 100vw;\r\n      overflow-x: hidden;\r\n      margin: 0;\r\n      padding: 0;\r\n      min-height: 100vh;\r\n      background-color: ${colorsDark.background};\r\n    }\r\n    ul {\r\n      list-style: none;\r\n      padding: 0;\r\n    }\r\n    a {\r\n      text-decoration: none;\r\n      &:visited {\r\n        color: inherit;\r\n      }\r\n    }\r\n  `;\r\n\r\nexport default setGlobalStyles;\r\n","const NS = \"@hnClone/app\";\r\n\r\nexport const actionTypes = {\r\n  SET_THEME: `${NS}/SET_THEME`,\r\n};\r\n\r\nconst actions = {\r\n  setTheme: (payload = {}) => ({ type: actionTypes.SET_THEME, payload })\r\n};\r\n\r\nexport default actions;\r\n","import { actionTypes } from \"./actions\";\r\n\r\nconst getInitialState = () => ({\r\n  theme: \"dark\",\r\n});\r\n\r\nconst app = (state = getInitialState(), { type, payload }) => {\r\n  switch(type) {\r\n    case actionTypes.SWITCH_THEME:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default app;\r\n","import { actionTypes } from \"./actions\";\r\n\r\nconst getInitialState = () => ({\r\n  storyIds: [],\r\n  stories: [],\r\n  page: 0,\r\n  isFetching: false,\r\n  error: \"\",\r\n});\r\n\r\nconst story = (state = getInitialState(), { type, payload }) => {\r\n  switch(type) {\r\n    case actionTypes.FETCH_STORY_IDS_REQUEST:\r\n    case actionTypes.FETCH_STORY_REQUEST:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n      };\r\n    case actionTypes.FETCH_STORY_IDS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n      };\r\n    case actionTypes.FETCH_STORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        stories: [...state.stories, ...payload.stories],\r\n        page: state.page + 1,\r\n        isFetching: false,\r\n      };\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default story;\r\n","import { combineReducers } from \"redux\";\r\nimport app from \"./app/reducers\";\r\nimport story from \"./story/reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  app,\r\n  story\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware,compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { createLogger } from \"redux-logger\";\r\n\r\nconst isProd = process.env.NODE_ENV === \"production\";\r\nconst middlewareList = [];\r\n\r\nmiddlewareList.push(thunk);\r\n\r\nif (!isProd) {\r\n  middlewareList.push(createLogger());\r\n}\r\n\r\nconst middleware = compose(applyMiddleware(...middlewareList));\r\n\r\nexport default middleware;\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\nimport middleware from \"./middleware\";\r\n\r\nconst configureStore = intialState => {\r\n  const store = createStore(reducer, intialState, middleware);\r\n  return store;\r\n};\r\n\r\nexport default configureStore;\r\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport setGlobalStyles from 'styles/globals';\nimport { Provider } from \"react-redux\";\nimport configureStore from \"store\";\nimport * as serviceWorker from './serviceWorker';\nimport HackerNewsApi from \"services/HackerNewsApi\";\n\nsetGlobalStyles();\nHackerNewsApi.getTopStoryIds().then(ids => console.log(ids));\n\nconst renderApp = () => {\n  const initialState = {};\n  const store = configureStore(initialState);\n  store.dispatch({ type: \"@hnClone/@@INIT\" });\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root'));\n}\n\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}